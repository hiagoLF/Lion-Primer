{"version":3,"sources":["../webpack/bootstrap","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../src/comlink.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/predictPrimers/stringUtils/getOccurrencesNumberOfElementInText.ts","services/predictPrimers/filter/removePrimersWithMoreThanOneDnaTarget.ts","services/predictPrimers/stringUtils/turnTextStringBackToFront.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","services/predictPrimers/format/correctPositionsInReversePrimers.ts","services/predictPrimers/format/getDnaComplementarSequenceFrom.ts","services/predictPrimers/format/getGeneNameFromFasta.ts","services/predictPrimers/format/getGeneSequenceFromFasta.ts","services/predictPrimers/fragments/getDeltaGOfNeighborBases.ts","services/predictPrimers/secondaryStructures/checkComplementarity.ts","services/predictPrimers/secondaryStructures/getDimersFromBends.ts","services/predictPrimers/secondaryStructures/getDimersFromSingleBend.ts","services/predictPrimers/secondaryStructures/getDimersDeltaGValues.ts","services/predictPrimers/fragments/getDeltaGValues.ts","services/predictPrimers/secondaryStructures/getEveryPossibleBends.ts","services/predictPrimers/fragments/getAmountNumberOfNitrogenBaseInFragment.ts","services/predictPrimers/fragments/getFragmentInformations.ts","services/predictPrimers/fragments/getCGcontentAtFiveLastNucleotides.ts","services/predictPrimers/fragments/getSubsequentDinucleotidesAmount.ts","services/predictPrimers/fragments/getSubsequentRepeatedBases.ts","services/predictPrimers/fragments/getGcPercentage.ts","services/predictPrimers/fragments/getMeltingTemperature.ts","services/predictPrimers/fragments/getFragmentsStartedOnIndex.ts","services/predictPrimers/fragments/findPrimersOnSingleSequence.ts","services/predictPrimers/fragments/index.ts","services/predictPrimers/filter/removeRepeatedPrimers.ts","services/predictPrimers/fragments/findPrimers.ts","services/predictPrimers/fragments/reducePrimersNumberByDimersDeltaGValueAndMelting.ts","services/predictPrimers/filter/getTheBestPrimers.ts","services/predictPrimers/primerComplement/matchPrimers.ts","services/predictPrimers/primerComplement/filterPrimersAndMatch.ts","services/predictPrimers/index.ts","services/predictPrimers/worker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","runtime","undefined","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","obj","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","minLen","from","test","_slicedToArray","isArray","_arr","_n","_d","_e","_s","_i","_defineProperty","_setPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","e","Parent","args","Class","a","apply","instance","arguments","_toConsumableArray","proxyMarker","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","MessageChannel","port1","port2","expose","deserialize","port","start","createProxy","target","isError","message","stack","serialized","assign","ep","addEventListener","callback","ev","data","returnValue","path","id","argumentList","map","fromWireValue","parent","reduce","prop","rawValue","transfer","catch","toWireValue","wireValue","transferables","postMessage","removeEventListener","closeEndPoint","endpoint","isMessagePort","close","throwIfProxyReleased","isReleased","isProxyReleased","proxy","_target","requestResponseMessage","set","_thisArg","rawArgumentList","last","processArguments","processed","v","concat","transferCache","WeakMap","transfers","allowArrayLike","it","F","f","normalCompletion","didErr","step","_e2","handler","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","getOccurrencesNumberOfElementInText","element","text","elementRegexString","RegExp","match","removePrimersWithMoreThanOneDnaTarget","primers","geneSequence","complementaryGeneSequence","filter","sequence","split","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","source","getOwnPropertyDescriptors","defineProperties","correctPositionsInReversePrimers","reversePrimers","geneLength","primer","positions","initialNucleotidePosition","finalNucleotidePosition","finalNucleotidePositionCorrected","getCorrectedPosition","initialNucleotidePositionCorrected","position","genelength","getDnaComplementarSequenceFrom","complementarGeneArray","nitrogenBase","getGeneNameFromFasta","fataGene","geneTitle","trim","indexOf","replace","getGeneSequenceFromFasta","fastaLines","includes","shift","getDeltaGOfNeighborBases","baseOne","baseTwo","bases","basesDeltaG","checkComplementarity","getDimersFromBends","oligoBends","bend","bendsCast","listOne","listTwo","castList","listOneElement","index","mergeLists","fragmentOne","fragmentTwo","dimers","foundDimer","basePair","bendsCastList","getDimersFromSingleBend","flat","getDimersDeltaGValues","oligonucleotide","dimer","deltaG","isThereCGNucleation","base","baseIndex","baseList","parseFloat","toFixed","getDeltaGValues","bends","divisionPositioin","firstPart","secondPart","getEveryPossibleBends","getAmountNumberOfNitrogenBaseInFragment","fragment","amountNumberOfNitrogenBase","fragmentNitrogenBase","getFragmentInformations","initialBaseIndex","finalIndex","geneSequenceArray","cgContentAtFiveLastNucleotides","cgAmount","nitrogenBaseIndex","getCGcontentAtFiveLastNucleotides","subsequentDinucleotidesAmount","subsequentDinucleotideAmount","dinucleotideIndex","foundNucleotide","getSubsequentDinucleotidesAmount","subsequentRepeatedBases","subsequentRepeatedBaseFound","currentBase","currentBaseIndex","getSubsequentRepeatedBases","gcPercentage","getGcPercentage","meltingTemperature","cContentNumber","getMeltingTemperature","dimersDeltaGValues","getFragmentsStartedOnIndex","fragmentsCollection","fragmentInformations","findPrimersOnSingleSequence","primersNotFiltered","geneSequenceToArray","fragments","getFragmentsFrom","primersList","isUnique","primerToCompare","primerToCompareIndex","findPrimers","fowardPrimers","reducePrimersNumberByDimersDeltaGValueAndMelting","combinedPrimers","sort","primersA","primersB","fowardPrimer","reversePrimer","getTheBestPrimers","primersToFilter","attempt","verifIfIsMeltingTemperatureSatisfied","verifIfIssubsequentDinucleotidesAmountSatisfied","verifIfIsSubsequentRepeatedBasesSatisfied","verifIfIsGcPercentageSatisfied","deltaGIndex","matchPrimers","bestReversePrimer","distanceBetweenFAndR","getDistanceBettween","verifyClosingMeltingTemperature","distanceBetweenFAndBestR","distanceBetweenRAndBestR","pp","first","second","distance","meltingOne","meltingTwo","filterPrimersAndMatch","combinationAttempts","console","log","theBestReversePrimers","theBestFowardPrimer","geneName","predictPrimersFromFastaGene"],"mappings":"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","file":"static/js/predictPrimersWorker.5fb21c47.chunk.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/Lion-Primer/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export function getOccurrencesNumberOfElementInText(\n  element: string,\n  text: string\n) {\n  const elementRegexString = new RegExp(element, \"g\");\n  const elementOccurrencesNumber = text.match(elementRegexString)?.length || 0;\n  return elementOccurrencesNumber;\n}\n","import { RemovePrimersWithMoreThanOneDnaTargetType } from \"../../../types/primers\";\nimport { getOccurrencesNumberOfElementInText } from \"../stringUtils/getOccurrencesNumberOfElementInText\";\nimport { turnTextStringBackToFront } from \"../stringUtils/turnTextStringBackToFront\";\n\nexport const removePrimersWithMoreThanOneDnaTarget: RemovePrimersWithMoreThanOneDnaTargetType =\n  (primers, geneSequence, complementaryGeneSequence) => {\n    const singleTargetPrimers = primers.filter(({ sequence }) => {\n      const primerOccourrencesNumber = getOccurrencesNumberOfElementInText(\n        sequence,\n        geneSequence\n      );\n\n      if (primerOccourrencesNumber > 1) {\n        return false;\n      }\n\n      const backToFrontPrimerSequence = turnTextStringBackToFront(sequence);\n      const backToFrontPrimerOccourrencesInComplementaryGene =\n        getOccurrencesNumberOfElementInText(\n          backToFrontPrimerSequence,\n          complementaryGeneSequence\n        );\n\n      if (backToFrontPrimerOccourrencesInComplementaryGene > 0) {\n        return false;\n      }\n\n      return true;\n    });\n\n    return singleTargetPrimers;\n  };\n","export function turnTextStringBackToFront(textString: string) {\n  const backToFrontTextString = textString.split(\"\").reverse().join(\"\");\n  return backToFrontTextString;\n}\n","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { PrimersType } from \"../../../types/primers\";\n\nexport default function correctPositionsInReversePrimers(\n  reversePrimers: PrimersType[],\n  geneLength: number\n): PrimersType[] {\n  const primersWithCorrectedPositions = reversePrimers.map((primer) => {\n    const { initialNucleotidePosition, finalNucleotidePosition } =\n      primer.positions;\n\n    const finalNucleotidePositionCorrected = getCorrectedPosition(\n      initialNucleotidePosition,\n      geneLength\n    );\n\n    const initialNucleotidePositionCorrected = getCorrectedPosition(\n      finalNucleotidePosition,\n      geneLength\n    );\n\n    return {\n      ...primer,\n      positions: {\n        initialNucleotidePosition: initialNucleotidePositionCorrected,\n        finalNucleotidePosition: finalNucleotidePositionCorrected,\n      },\n    };\n  });\n\n  return primersWithCorrectedPositions;\n}\n\nfunction getCorrectedPosition(position: number, genelength: number) {\n  const correctPosition = genelength - position + 1;\n  return correctPosition;\n}\n","export default function getDnaComplementarSequenceFrom(geneSequence: string) {\n  const geneConvertedToArray = geneSequence.split(\"\");\n  const complementarGeneArray = geneConvertedToArray.map((nitrogenBase) => {\n    switch (nitrogenBase) {\n      case \"A\":\n        return \"T\";\n      case \"T\":\n        return \"A\";\n      case \"G\":\n        return \"C\";\n      case \"C\":\n        return \"G\";\n    }\n    return ''\n  });\n  complementarGeneArray.reverse();\n  const complementaryGeneString = complementarGeneArray.join(\"\");\n  return complementaryGeneString;\n}\n","export function getGeneNameFromFasta(fataGene: string) {\n  const geneTitle = fataGene.trim().split(\"\\n\")[0];\n  if(geneTitle.indexOf('>') === -1){\n    return 'Gene Desconhecido'\n  }\n  geneTitle.replace('>', '')\n  return geneTitle;\n}\n","export function getGeneSequenceFromFasta(fataGene: string) {\n  const fastaLines = fataGene.trim().split(\"\\n\");\n  if (fastaLines[0][0].includes(\">\")) {\n    fastaLines.shift();\n  }\n  const geneSequence = fastaLines.join(\"\");\n  return geneSequence;\n}\n","import { basesDeltaG } from \"../config/deltaG.json\";\n\ntype BaseIndexType =\n  | \"AA\"\n  | \"TT\"\n  | \"AT\"\n  | \"TA\"\n  | \"CA\"\n  | \"TG\"\n  | \"GT\"\n  | \"AC\"\n  | \"CT\"\n  | \"AG\"\n  | \"GA\"\n  | \"TC\"\n  | \"CG\"\n  | \"GC\"\n  | \"GG\"\n  | \"CC\"\n  | \"G\"\n  | \"A\";\n\nexport default function getDeltaGOfNeighborBases(\n  baseOne: string,\n  baseTwo?: string\n) {\n  const bases = (baseOne + (baseTwo || \"\")) as BaseIndexType;\n  const deltaG = basesDeltaG[bases];\n  return deltaG;\n}\n","export default function checkComplementarity(baseOne: string, baseTwo: string) {\n  if (baseOne === \"A\" && baseTwo === \"T\") return true;\n  if (baseOne === \"T\" && baseTwo === \"A\") return true;\n  if (baseOne === \"G\" && baseTwo === \"C\") return true;\n  if (baseOne === \"C\" && baseTwo === \"G\") return true;\n  return false;\n}\n","import { BendType } from \"../../../types/primers\";\nimport getDimersFromSingleBend from \"./getDimersFromSingleBend\";\n\nexport type DimersSequences = Array<string[]>;\n\nexport default function getDimersFromBends(oligoBends: BendType[]) {\n  const dimers = oligoBends.map((bend) => {\n    return getDimersFromSingleBend(bend);\n  });\n\n  return dimers.flat();\n}\n","import { BendType } from \"../../../types/primers\";\nimport checkComplementarity from \"./checkComplementarity\";\n\nexport default function getDimersFromSingleBend(\n  bend: BendType\n): Array<string[]> {\n  const { fragmentOne, fragmentTwo } = bend;\n  const fragmentTwoCopy = [...fragmentTwo].reverse();\n  const bendsCast: Array<[string, string]> = mergeLists(\n    fragmentOne,\n    fragmentTwoCopy\n  );\n\n  // ..... Não mexe daqui pra cima\n\n  const dimers: Array<string[]> = [];\n  let foundDimer = true;\n  bendsCast.forEach((basePair, index, bendsCastList) => {\n    if (checkComplementarity(basePair[0], basePair[1])) {\n      if (\n        checkComplementarity(\n          bendsCastList[index + 1] ? bendsCastList[index + 1][0] : \"A\",\n          bendsCastList[index + 1] ? bendsCastList[index + 1][1] : \"G\"\n        )\n      ) {\n        dimers.length === 0 && dimers.push([]);\n        dimers[dimers.length - 1].push(basePair[0]);\n        foundDimer = true;\n      } else {\n        if (foundDimer) {\n          foundDimer = false;\n          if (dimers.length === 0) dimers.push([]);\n          dimers[dimers.length - 1].push(basePair[0]);\n          dimers.push([]);\n        }\n      }\n    }\n  });\n  dimers.pop();\n\n  return dimers;\n}\n\nexport function mergeLists(listOne: Array<any>, listTwo: Array<any>) {\n  let castList: any[] = [];\n  listOne.forEach((listOneElement, index) => {\n    castList.push([listOneElement, listTwo[index]]);\n  });\n  return castList;\n}\n","import getDeltaGValues from \"../fragments/getDeltaGValues\";\nimport getDimersFromBends from \"./getDimersFromBends\";\nimport getEveryPossibleBends from \"./getEveryPossibleBends\";\n\nexport type SecondaryStructureType = {\n  deltaG: number;\n  position: \"internal\" | \"end\";\n};\n\nexport default function getDimersDeltaGValues(oligonucleotide: string[]) {\n  const oligoBends = getEveryPossibleBends(oligonucleotide);\n  const dimers = getDimersFromBends(oligoBends);\n  const dimersWithDeltaGValues = getDeltaGValues(dimers);\n  return dimersWithDeltaGValues\n}\n\n","import getDeltaGOfNeighborBases from \"./getDeltaGOfNeighborBases\";\n\nexport default function getDeltaGValues(dimers: Array<string[]>) {\n  const deltaGValues = dimers.map((dimer): number => {\n    let deltaG = 0;\n    let isThereCGNucleation = false;\n\n    dimer.forEach((base, baseIndex, baseList) => {\n      if (\"CG\".includes(base) || \"CG\".includes(baseList[baseIndex + 1])) {\n        isThereCGNucleation = true;\n      }\n      if (baseList[baseIndex + 1]) {\n        const basesDeltaG = getDeltaGOfNeighborBases(\n          base,\n          baseList[baseIndex + 1]\n        );\n        deltaG = deltaG + basesDeltaG;\n      }\n    });\n\n    if (isThereCGNucleation) {\n      deltaG = deltaG + getDeltaGOfNeighborBases(\"G\");\n    } else {\n      deltaG = deltaG + getDeltaGOfNeighborBases(\"A\");\n    }\n\n    return parseFloat(deltaG.toFixed(2));\n  });\n  return deltaGValues;\n}\n","import { BendType } from \"../../../types/primers\";\n\nexport default function getEveryPossibleBends(oligonucleotide: string[]) {\n  const bends: BendType[] = [];\n\n  for (\n    let divisionPositioin = 2;\n    divisionPositioin < oligonucleotide.length-1;\n    divisionPositioin++\n  ) {\n    let firstPart = oligonucleotide.slice(0, divisionPositioin);\n    let secondPart = oligonucleotide.slice(\n      divisionPositioin,\n      oligonucleotide.length\n    );\n    if (firstPart !== [] && secondPart !== []) {\n\n      if(firstPart.length > secondPart.length){\n        firstPart = firstPart.slice(firstPart.length - secondPart.length, firstPart.length)\n      }else{\n        secondPart = secondPart.slice(0, firstPart.length)\n      }\n\n      bends.push({\n        fragmentOne: firstPart,\n        fragmentTwo: secondPart,\n      });\n    }\n  }\n\n  return bends\n}\n","\nexport function getAmountNumberOfNitrogenBaseInFragment(\n    nitrogenBase: string,\n    fragment: string[]\n  ) {\n    let amountNumberOfNitrogenBase = 0;\n    fragment.forEach((fragmentNitrogenBase) => {\n      if (fragmentNitrogenBase === nitrogenBase) {\n        amountNumberOfNitrogenBase++;\n      }\n    });\n    return amountNumberOfNitrogenBase;\n  }","import getDimersDeltaGValues from \"../secondaryStructures/getDimersDeltaGValues\";\nimport { getCGcontentAtFiveLastNucleotides } from \"./getCGcontentAtFiveLastNucleotides\";\nimport { getGcPercentage } from \"./getGcPercentage\";\nimport { getMeltingTemperature } from \"./getMeltingTemperature\";\nimport { getSubsequentDinucleotidesAmount } from \"./getSubsequentDinucleotidesAmount\";\nimport { getSubsequentRepeatedBases } from \"./getSubsequentRepeatedBases\";\n\nexport function getFragmentInformations(\n  initialBaseIndex: number,\n  finalIndex: number,\n  geneSequenceArray: string[]\n) {\n  const fragment = geneSequenceArray.slice(initialBaseIndex, finalIndex);\n  const cgContentAtFiveLastNucleotides =\n    getCGcontentAtFiveLastNucleotides(fragment);\n  const subsequentDinucleotidesAmount =\n    getSubsequentDinucleotidesAmount(fragment);\n  const subsequentRepeatedBases = getSubsequentRepeatedBases(fragment);\n  const gcPercentage = getGcPercentage(fragment);\n  const meltingTemperature = getMeltingTemperature(fragment);\n\n  const dimersDeltaGValues = getDimersDeltaGValues(fragment);\n\n  const fragmentInformations = {\n    sequence: fragment.join(\"\"),\n    positions: {\n      initialNucleotidePosition: initialBaseIndex + 1,\n      finalNucleotidePosition: finalIndex,\n    },\n    cgContentAtFiveLastNucleotides,\n    subsequentDinucleotidesAmount,\n    subsequentRepeatedBases,\n    gcPercentage,\n    meltingTemperature,\n    dimersDeltaGValues,\n  };\n\n  return fragmentInformations;\n}\n","export function getCGcontentAtFiveLastNucleotides(fragment: string[]) {\n  let cgAmount = 0;\n  for (\n    let nitrogenBaseIndex = fragment.length - 5;\n    nitrogenBaseIndex <= fragment.length;\n    nitrogenBaseIndex++\n  ) {\n    if (\n      fragment[nitrogenBaseIndex] === \"C\" ||\n      fragment[nitrogenBaseIndex] === \"G\"\n    ) {\n      cgAmount++;\n    }\n  }\n  return cgAmount;\n}\n","export function getSubsequentDinucleotidesAmount(fragment: string[]) {\n  let subsequentDinucleotideAmount = 0;\n  let dinucleotideIndex = 0;\n  let foundNucleotide = false;\n\n  while (dinucleotideIndex < fragment.length - 3) {\n    const currentDinucleotide = [\n      fragment[dinucleotideIndex],\n      fragment[dinucleotideIndex + 1],\n    ].join(\"\");\n    const nextDinucleotide = [\n      fragment[dinucleotideIndex + 2],\n      fragment[dinucleotideIndex + 3],\n    ].join(\"\");\n    if (currentDinucleotide === nextDinucleotide) {\n      subsequentDinucleotideAmount++;\n      dinucleotideIndex = dinucleotideIndex + 2;\n      foundNucleotide = true;\n    } else {\n      if (foundNucleotide) {\n        foundNucleotide = false;\n        subsequentDinucleotideAmount++;\n      }\n      dinucleotideIndex++;\n    }\n  }\n  return subsequentDinucleotideAmount;\n}\n","export function getSubsequentRepeatedBases(fragment: string[]) {\n  let subsequentRepeatedBases = 0;\n  let subsequentRepeatedBaseFound = false;\n\n  fragment.forEach((currentBase, currentBaseIndex) => {\n    if (currentBase === fragment[currentBaseIndex + 1]) {\n      subsequentRepeatedBases++;\n      subsequentRepeatedBaseFound = true;\n    } else {\n      if (subsequentRepeatedBaseFound) {\n        subsequentRepeatedBases++;\n        subsequentRepeatedBaseFound = false;\n      }\n    }\n  });\n\n  return subsequentRepeatedBases;\n}\n","import { getAmountNumberOfNitrogenBaseInFragment } from \"./getAmountNumberOfNitrogenBaseInFragment\";\n\nexport function getGcPercentage(fragment: string[]) {\n  const gAmountNumber = getAmountNumberOfNitrogenBaseInFragment(\"G\", fragment);\n  const cAmountNumber = getAmountNumberOfNitrogenBaseInFragment(\"C\", fragment);\n  const gcAmountNumber = gAmountNumber + cAmountNumber;\n  const gcPercentage = (gcAmountNumber / fragment.length) * 100;\n  return gcPercentage;\n}\n","import { getAmountNumberOfNitrogenBaseInFragment } from \"./getAmountNumberOfNitrogenBaseInFragment\";\n\nexport function getMeltingTemperature(fragment: string[]) {\n  const cContentNumber = getAmountNumberOfNitrogenBaseInFragment(\"C\", fragment);\n  const gContentNumber = getAmountNumberOfNitrogenBaseInFragment(\"G\", fragment);\n  const aContentNumber = getAmountNumberOfNitrogenBaseInFragment(\"A\", fragment);\n  const tContentNumber = getAmountNumberOfNitrogenBaseInFragment(\"T\", fragment);\n  const meltingTemperature =\n    4 * (gContentNumber + cContentNumber) +\n    2 * (aContentNumber + tContentNumber);\n  return meltingTemperature;\n}\n","import { getFragmentInformations } from \"./getFragmentInformations\";\n\nexport function getFragmentsStartedOnIndex(\n  initialBaseIndex: number,\n  geneSequenceArray: string[]\n) {\n  const fragmentsCollection = [];\n\n  for (\n    let finalIndex = initialBaseIndex + 17;\n    finalIndex <= initialBaseIndex + 22;\n    finalIndex++\n  ) {\n    const fragmentInformations = getFragmentInformations(\n      initialBaseIndex,\n      finalIndex,\n      geneSequenceArray\n    );\n    fragmentsCollection.push(fragmentInformations);\n  }\n\n  return fragmentsCollection;\n}\n","import { getFragmentsFrom } from \".\";\nimport { removeRepeatedPrimers } from \"../filter/removeRepeatedPrimers\";\n\nexport default function findPrimersOnSingleSequence(sequence: string) {\n  const primersNotFiltered = getFragmentsFrom(sequence);\n  const uniquePrimers = removeRepeatedPrimers(primersNotFiltered);\n\n  return uniquePrimers;\n}\n","import { getFragmentsStartedOnIndex } from \"./getFragmentsStartedOnIndex\";\n\nexport function getFragmentsFrom(geneSequence: string) {\n  const geneSequenceToArray = geneSequence.split(\"\");\n  const fragmentsCollection = [];\n\n  for (\n    let nitrogenBaseIndex = 0;\n    nitrogenBaseIndex <= geneSequence.length - 22;\n    nitrogenBaseIndex++\n  ) {\n    const fragments = getFragmentsStartedOnIndex(\n      nitrogenBaseIndex,\n      geneSequenceToArray\n    );\n    fragmentsCollection.push(...fragments);\n  }\n\n  return fragmentsCollection;\n}\n","import { PrimersType } from \"../../../types/primers\";\n\nexport function removeRepeatedPrimers(theBestPrimers: PrimersType[]) {\n  const uniquePrimers = theBestPrimers.filter((primer, index, primersList) => {\n    let isUnique = true;\n    primersList.forEach((primerToCompare, primerToCompareIndex) => {\n      if (\n        primerToCompareIndex !== index &&\n        primerToCompare.sequence === primer.sequence\n      ) {\n        isUnique = false;\n      }\n    });\n    return isUnique;\n  });\n\n  return uniquePrimers;\n}\n","import { PrimersType } from \"../../../types/primers\";\nimport findPrimersOnSingleSequence from \"./findPrimersOnSingleSequence\";\n\ntype FindPrimersReturn = {\n  reversePrimers: PrimersType[];\n  fowardPrimers: PrimersType[];\n};\n\ntype FindPrimers = (\n  complementaryGeneSequence: string,\n  geneSequence: string\n) => FindPrimersReturn;\n\nconst findPrimers: FindPrimers = (complementaryGeneSequence, geneSequence) => {\n\n  const reversePrimers = findPrimersOnSingleSequence(\n    complementaryGeneSequence\n  );\n  const fowardPrimers = findPrimersOnSingleSequence(geneSequence);\n\n  return { reversePrimers, fowardPrimers};\n};\n\nexport default findPrimers;\n","import { CombinedPrimersType } from \"../../../types/primers\";\n\ntype PrimersDeltaGAmountType = {\n  deltaGAmount: number;\n  primersCombinationAmount: number;\n};\n\nexport default function reducePrimersNumberByDimersDeltaGValueAndMelting(\n  combinedPrimers: CombinedPrimersType[]\n) {\n  const combinedPrimersSortedByDeltaG = combinedPrimers.sort(\n    (primersA, primersB) => {\n      const primersADeltaGAmount =\n        primersA.fowardPrimer.dimersDeltaGValues.length +\n        primersA.reversePrimer.dimersDeltaGValues.length;\n      const primersBDeltaGAmount =\n        primersB.fowardPrimer.dimersDeltaGValues.length +\n        primersB.reversePrimer.dimersDeltaGValues.length;\n      if (primersADeltaGAmount <= primersBDeltaGAmount) {\n        return 1;\n      } else {\n        return -1;\n      }\n    }\n  );\n\n  const combinedPrimersSortedByMelting = combinedPrimersSortedByDeltaG.sort(\n    (primersA, primersB) => {\n      if (\n        primersA.fowardPrimer.meltingTemperature <=\n        primersB.fowardPrimer.meltingTemperature\n      ) {\n        return 1;\n      } else {\n        return -1;\n      }\n    }\n  );\n\n  const reducedPrimers = combinedPrimersSortedByMelting.slice(0, 4);\n  return reducedPrimers;\n}\n","import { PrimersType } from \"../../../types/primers\";\n\nexport function getTheBestPrimers(\n  primersToFilter: PrimersType[],\n  attempt: number\n) {\n  let betterPrimers = primersToFilter.filter((primer) => {\n    if (primer.cgContentAtFiveLastNucleotides >= 3) {\n      return false;\n    }\n\n    const isMeltingTemperatureSatisfied = verifIfIsMeltingTemperatureSatisfied(\n      primer.meltingTemperature,\n      attempt\n    );\n    if (!isMeltingTemperatureSatisfied) {\n      return false;\n    }\n\n    const isSubsequentDinucleotidesAmountSatisfied =\n      verifIfIssubsequentDinucleotidesAmountSatisfied(\n        primer.subsequentDinucleotidesAmount,\n        attempt\n      );\n    if (!isSubsequentDinucleotidesAmountSatisfied) {\n      return false;\n    }\n\n    const isSubsequentRepeatedBasesSatisfied =\n      verifIfIsSubsequentRepeatedBasesSatisfied(\n        primer.subsequentRepeatedBases,\n        attempt\n      );\n    if (!isSubsequentRepeatedBasesSatisfied) {\n      return false;\n    }\n\n    const isGcPercentageSatisfied = verifIfIsGcPercentageSatisfied(\n      primer.gcPercentage,\n      attempt\n    );\n    if (!isGcPercentageSatisfied) {\n      return false;\n    }\n\n    for (\n      let deltaGIndex = 0;\n      deltaGIndex < primer.dimersDeltaGValues.length;\n      deltaGIndex++\n    ) {\n      if (primer.dimersDeltaGValues[deltaGIndex] <= -3) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n  return betterPrimers;\n}\n\nfunction verifIfIssubsequentDinucleotidesAmountSatisfied(\n  subsequentDinucleotidesAmount: number,\n  attempt: number\n) {\n  // Para tentativa 10 e 11\n  if (attempt === 15 && subsequentDinucleotidesAmount <= 8) {\n    return true;\n  }\n\n  // Para tentativa 10 e 11\n  if (attempt === 14 && subsequentDinucleotidesAmount <= 7) {\n    return true;\n  }\n\n  // Para tentativa 10 e 11\n  if (\n    (attempt === 10 || attempt === 11 || attempt === 12 || attempt === 13) &&\n    subsequentDinucleotidesAmount <= 6\n  ) {\n    return true;\n  }\n\n  // Para tentativa 5 e 9\n  if ((attempt === 5 || attempt === 9) && subsequentDinucleotidesAmount <= 5) {\n    return true;\n  }\n\n  // Para tentativa 1 e outras\n  if (subsequentDinucleotidesAmount <= 4) {\n    return true;\n  }\n  return false;\n}\n\nfunction verifIfIsSubsequentRepeatedBasesSatisfied(\n  subsequentRepeatedBases: number,\n  attempt: number\n) {\n  // Para tentativa 11\n  if (attempt === 15 && subsequentRepeatedBases <= 8) {\n    return true;\n  }\n\n  // Para tentativa 11\n  if (attempt === 14 && subsequentRepeatedBases <= 7) {\n    return true;\n  }\n\n  // Para tentativa 11\n  if (\n    (attempt === 11 || attempt === 12 || attempt === 13) &&\n    subsequentRepeatedBases <= 6\n  ) {\n    return true;\n  }\n\n  // Para tentativa 5, 8, 9, 10\n  if (\n    (attempt === 5 || attempt === 8 || attempt === 9 || attempt === 10) &&\n    subsequentRepeatedBases <= 5\n  ) {\n    return true;\n  }\n\n  // Para tentativa 1 e outras\n  if (subsequentRepeatedBases <= 4) {\n    return true;\n  }\n  return false;\n}\n\nfunction verifIfIsMeltingTemperatureSatisfied(\n  meltingTemperature: number,\n  attempt: number\n) {\n\n  // Para a tentativa 2, 7, 8, 9, 10 e 11\n  if (\n    (\n      attempt === 9 ||\n      attempt === 10 ||\n      attempt === 11 ||\n      attempt === 12 ||\n      attempt === 14 ||\n      attempt === 15) &&\n    meltingTemperature >= 51 &&\n    meltingTemperature <= 59\n  ) {\n    return true;\n  }\n  // Para a tentativa 1 e todas as outras tentativas\n  if (meltingTemperature >= 52 && meltingTemperature <= 58) {\n    return true;\n  }\n  return false;\n}\n\nfunction verifIfIsGcPercentageSatisfied(gcPercentage: number, attempt: number) {\n  // Para a tentativa 13\n  if (\n    (attempt === 13 || attempt === 14 || attempt === 15) &&\n    gcPercentage >= 20 &&\n    gcPercentage <= 80\n  ) {\n    return true;\n  }\n\n  // Para a tentativa 12\n  if (attempt === 12 && gcPercentage >= 25 && gcPercentage <= 75) {\n    return true;\n  }\n\n  // Para a tentativa 4, 7, 8, 9, 10 e 11\n  if (\n    (attempt === 4 ||\n      attempt === 7 ||\n      attempt === 8 ||\n      attempt === 9 ||\n      attempt === 10 ||\n      attempt === 11) &&\n    gcPercentage >= 30 &&\n    gcPercentage <= 70\n  ) {\n    return true;\n  }\n\n  // Para a tentativa 3\n  if (attempt === 3 && gcPercentage >= 35 && gcPercentage <= 65) {\n    return true;\n  }\n\n  // Para a tentativa 1 e outras\n  if (gcPercentage >= 40 && gcPercentage <= 60) {\n    return true;\n  }\n  return false;\n}\n","import { PrimersType } from \"../../../types/primers\";\n\nexport const matchPrimers = (\n  fowardPrimers: PrimersType[],\n  reversePrimers: PrimersType[]\n) => {\n  const matchedPrimersAndUndefineds = fowardPrimers.map((fowardPrimer) => {\n    var bestReversePrimer: PrimersType | undefined = undefined;\n\n    for (let index = 0; index < reversePrimers.length; index++) {\n      const distanceBetweenFAndR = getDistanceBettween(\n        fowardPrimer,\n        reversePrimers[index]\n      );\n      if (!distanceBetweenFAndR) {\n        continue;\n      }\n      const isFAndRClosingMeltingTemperature = verifyClosingMeltingTemperature(\n        fowardPrimer.meltingTemperature,\n        reversePrimers[index].meltingTemperature\n      );\n      if (!isFAndRClosingMeltingTemperature) {\n        continue;\n      }\n      if (distanceBetweenFAndR > 700) {\n        continue;\n      }\n      if (distanceBetweenFAndR < 70) {\n        continue;\n      }\n      if (!bestReversePrimer) {\n        bestReversePrimer = reversePrimers[index];\n        continue;\n      }\n      const distanceBetweenFAndBestR = getDistanceBettween(\n        fowardPrimer,\n        bestReversePrimer\n      ) as number;\n      if (distanceBetweenFAndBestR > 500 && distanceBetweenFAndR < 500) {\n        bestReversePrimer = reversePrimers[index];\n        continue;\n      }\n      const distanceBetweenRAndBestR = getDistanceBettween(\n        reversePrimers[index],\n        bestReversePrimer\n      );\n      if (\n        distanceBetweenFAndBestR > 500 &&\n        distanceBetweenFAndR > 500 &&\n        distanceBetweenRAndBestR\n      ) {\n        bestReversePrimer = reversePrimers[index];\n        continue;\n      }\n      if (\n        distanceBetweenFAndBestR < 500 &&\n        distanceBetweenFAndR < 500 &&\n        !distanceBetweenRAndBestR\n      ) {\n        bestReversePrimer = reversePrimers[index];\n        continue;\n      }\n    }\n\n    if (!bestReversePrimer) {\n      return undefined;\n    }\n    return {\n      fowardPrimer,\n      reversePrimer: bestReversePrimer,\n    };\n  });\n\n  const matchedPrimers = matchedPrimersAndUndefineds.filter((pp) => pp);\n\n  return matchedPrimers as {\n    fowardPrimer: PrimersType;\n    reversePrimer: PrimersType;\n  }[];\n};\n\nfunction getDistanceBettween(first: PrimersType, second: PrimersType) {\n  const distance =\n    second.positions.finalNucleotidePosition -\n    first.positions.initialNucleotidePosition;\n  if (distance < 0) {\n    return undefined;\n  }\n  return distance;\n}\n\nfunction verifyClosingMeltingTemperature(\n  meltingOne: number,\n  meltingTwo: number\n) {\n  if (meltingOne > meltingTwo) {\n    if (meltingOne - meltingTwo <= 1) {\n      return true;\n    }\n  } else {\n    if (meltingTwo - meltingOne <= 1) {\n      return true;\n    }\n  }\n  return false;\n}\n","import { CombinedPrimersType, PrimersType } from \"../../../types/primers\";\nimport { getTheBestPrimers } from \"../filter/getTheBestPrimers\";\nimport { matchPrimers } from \"./matchPrimers\";\n\nexport default function filterPrimersAndMatch(\n  fowardPrimers: PrimersType[],\n  reversePrimers: PrimersType[]\n): CombinedPrimersType[] {\n  let combinedPrimers: CombinedPrimersType[] = [];\n  let combinationAttempts = 0;\n\n  while (combinedPrimers.length === 0 && combinationAttempts <= 13) {\n    console.log(combinationAttempts);\n\n    combinationAttempts = combinationAttempts + 1;\n\n    const theBestReversePrimers = getTheBestPrimers(\n      reversePrimers,\n      combinationAttempts\n    );\n    const theBestFowardPrimer = getTheBestPrimers(\n      fowardPrimers,\n      combinationAttempts\n    );\n\n    combinedPrimers = matchPrimers(theBestFowardPrimer, theBestReversePrimers);\n    console.log(combinedPrimers);\n  }\n\n  return combinedPrimers;\n}\n","import { CombinedPrimersType } from \"../../types/primers\";\nimport { removePrimersWithMoreThanOneDnaTarget } from \"./filter/removePrimersWithMoreThanOneDnaTarget\";\nimport correctPositionsInReversePrimers from \"./format/correctPositionsInReversePrimers\";\nimport getDnaComplementarSequenceFrom from \"./format/getDnaComplementarSequenceFrom\";\nimport { getGeneNameFromFasta } from \"./format/getGeneNameFromFasta\";\nimport { getGeneSequenceFromFasta } from \"./format/getGeneSequenceFromFasta\";\nimport findPrimers from \"./fragments/findPrimers\";\nimport reducePrimersNumberByDimersDeltaGValueAndMelting from \"./fragments/reducePrimersNumberByDimersDeltaGValueAndMelting\";\nimport filterPrimersAndMatch from \"./primerComplement/filterPrimersAndMatch\";\n\nasync function predictPrimersFromFastaGene(fataGene: string): Promise<{\n  geneName: string;\n  geneSequence: string;\n  primers: CombinedPrimersType[];\n}> {\n  return new Promise((resolve) => {\n    const geneName = getGeneNameFromFasta(fataGene);\n    const geneSequence = getGeneSequenceFromFasta(fataGene);\n\n    const complementaryGeneSequence =\n      getDnaComplementarSequenceFrom(geneSequence);\n\n    const { reversePrimers, fowardPrimers } = findPrimers(\n      complementaryGeneSequence,\n      geneSequence\n    );\n\n    const fowardPrimersWithOneTarget = removePrimersWithMoreThanOneDnaTarget(\n      fowardPrimers,\n      geneSequence,\n      complementaryGeneSequence\n    );\n\n    const reversePrimersWithOneTarget = removePrimersWithMoreThanOneDnaTarget(\n      reversePrimers,\n      complementaryGeneSequence,\n      geneSequence\n    );\n\n    const reversePrimersWithPosisionsCorrected =\n      correctPositionsInReversePrimers(\n        reversePrimersWithOneTarget,\n        geneSequence.length\n      );\n\n    const combinedPrimers = filterPrimersAndMatch(\n      fowardPrimersWithOneTarget,\n      reversePrimersWithPosisionsCorrected\n    );\n\n    const reducedPrimers =\n      reducePrimersNumberByDimersDeltaGValueAndMelting(combinedPrimers);\n\n    // const primersAndAnelingTemperatures =\n    //   getPrimersAnelingTemperatures(combinedPrimers);\n\n    resolve({\n      geneName,\n      geneSequence,\n      primers: reducedPrimers,\n    });\n  });\n}\n\nexport default predictPrimersFromFastaGene;\n","import { expose } from \"comlink\";\nimport predictPrimersFromFastaGene from \"./\";\n\nconst worker = {\n  predictPrimersFromFastaGene,\n};\n\nexport type PredictPrimersFromFastaGene = typeof worker;\n\nexpose(worker);\n"],"sourceRoot":""}